# -*- coding: utf-8 -*-
"""Untitled27.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jzYVNQcZoOq5aldZX44i-KXOTWdJddj-
"""

# 1(Integer.)
x=29
y=6
z=x+y
print(z)
print(type(z))

#2 (Float.)
dt_dec=35.600
print(type(dt_dec))

#3 (String)
x='Hai '
y='bye'
z=x+y
print(z.upper())
print(z.lower())
z.replace('bye','good bye')

#4 (Type Casting)
s1=55
s2=77
s3=87
s4=85
s5=65
total=s1+s2+s3+s4+s5
average=total/5
print("Total marks:",total)
print("Average:",average)
int(average)

#5 (List)
name=['gulfum','thiru','elavarasu','santosh','nisanth']
gender=['male','male','male','male','male']
age=[20,30,26,23,22]
reg_no=[22,34,21,3,7]
nation=['true','false','true','true','false']
print(name,"\n",gender,"\n",age,"\n",reg_no,"\n",nation,)
name.append('yogesh',)
reg_no.extend([22,43,57])
del(reg_no[5])
con=name+gender
print("Length of the list\t\t:\t\t",len(age))
print("Element added in the list\t:\t",name)
print("Multiple elements added in list\t:\t",reg_no)
print("deleted element\t\t\t:\t",reg_no)
print("Concatenate the two lists\t:\t",con)
print("particular item in this list\t:\t",)
a='false'
if a in nation:
  print("\t\tOther countries people also here")
else:
  print("Same county")

#6 (Tuples)
my_data=(6,'gulfum','006',7.9,1.9)
print("tuples\t\t:\t",my_data)
print("\n1st element of the tuple\t\t:",my_data[0])
print("Last element of the tuple\t\t:",my_data[3])
print("1st two elements of the tuple\t\t:",my_data[0:2])

#7 (Dictionary)
whats={
    'good night':'gm=n','tommorow':'tmrw','today':'tday'
}
print(whats)
print(whats.keys())
print(whats['today'])
print(whats)

#Ex:2
#Calculate the electricity bill
print("\t\t\tcalculating EB bill")
type=int(input("\n select the residntial palce:\n1.household\n2.commercial\n"))     
if(type ==1):
  def house():
    print("EB Bill for your House:")
    
    unit=int(input("enter the units"))
    if(unit<=100):
        ui=unit*0.50
    elif unit>=101 and unit<201:
         ui=unit*0.75
    elif unit<201 and unit<301:
         ui=unit*1.20
    else:
         ui=unit*1.50
    print("total charges:",ui)
  house()  
if(type ==2):
     def com():
      print("EB Bill for your Commercial palce:")
   
      unit=int(input("enter the units"))
      if(unit<=100):
        ui=unit*0.50*2
      elif unit>=101 and unit<201:
          ui=unit*0.75*2
      elif unit<201 and unit<301:
            ui=unit*1.20*2
      else:
         ui=unit*1.50*2
      print("total charges:",ui)
     com()

#Ex. 3: OOPS Concepts: Functions & Inheritan
#1 Quiz Using Functions: 
#Ex. 3: OOPS Concepts: Functions & Inheritance  
#(1)Quiz Using Functions: 
p=0
q1 = '''1.  Which of the following is an objective of network security?
a) Confidentiality
b) Integrity
c) Availability
d) All of the above'''
ca1 = 'd'
ans1 = input(q1)
if ans1 == ca1:
  p += 2
else:
  p -=1
print("\n\nCurrent points is:",p)  
q2 = '''\n2) Which of the following is not a cybercrime?
a) Denial of Service
b) Man in the Middle
c) Malware
d) AES'''
ca2 = 'd'
ans2 = input(q2) 
if ans2 == ca2:
  p +=2
else:
  p -= 1
print("\n\nCurrent points is:",p)  
q3 = '''\n3). Which of the following is a component of cyber security?
a) Internet Of Things
b) AI
c) Database
d) Attacks'''
ca3 = 'a'
ans3 = input(q3)
if ans3 == ca3:
  p +=2
else:
  p -= 1
print("\n\nCurrent points is:",p)  
q4 = '''\n4)  Which of the following is a type of cyber attack?
a) Phishing
b) SQL Injections
c) Password Attack
d) All of the above'''
ca4 = 'd'
ans4 = input(q4)
if ans4 == ca4:
  p +=2
else:
  p -=1
print("\n\nCurrent points is:",p)  
q5 = '''\n5) “Cyberspace” was coined by _________
a) Richard Stallman
b) William Gibson
c) Andrew Tannenbaum
d) Scott Fahlman'''
ca5 = 'b'
ans5 = input(q5)
if ans5 == ca5:
  p +=2
else:
  p -=1
print("\n\n\n\t\tTotal points is:",p)



#Ex. 3: OOPS Concepts: Functions & Inheritance  
#2 Calculate the Gross Salary and Net Salary  
sal=float(input("Enter the basic salary:"))
lo=int(input("EMI PENDING \n1.yes\t2.no"))
if(lo == 1):
   def yes():
     da=sal*20/100;
     hra=sal*10/100;
     pf=sal*12/100;
     ta=sal*7.50/100;  
     emi=sal*2/100;
     net=da+hra-pf+ta-emi;
     gross=da+hra+ta;
     print("\nBasics:\t\t\t=\t\t",sal)
     print("\nDA:\t\t\t=\t\t",da)
     print("\nHRA:\t\t\t=\t\t",hra)
     print("\nPF:\t\t\t=\t\t",pf)
     print("\nTA:\t\t\t=\t\t",ta)
     print("\nEMI:\t\t\t=\t\t",emi)
     print("\n\t\t\t\t-------------------------------------------")
     print("\nNET SALARY:\t\t=\t\t",net)
     print("\n\t\t\t\t-------------------------------------------")
     print("\nGROSS SALARY:\t\t=\t\t",gross)
     print("\nDectected amount for EMI:\t\t",emi )
   yes()
if(lo== 2):
     def no():
        da=sal*20/100;
        hra=sal*10/100;
        pf=sal*12/100;
        ta=sal*7.50/100;  
        emi=0;
        net=da+hra-pf+ta-emi;
        gross=da+hra+ta;
        print("\nBasics:\t\t\t=\t\t",sal)
        print("\nDA:\t\t\t=\t\t",da)
        print("\nHRA:\t\t\t=\t\t",hra)
        print("\nPF:\t\t\t=\t\t",pf)
        print("\nTA:\t\t\t=\t\t",ta)
        print("\nEMI:\t\t\t=\t\t",emi)
        print("\n\t\t\t\t-------------------------------------------")
        print("\nNET SALARY:\t\t=\t\t",net)
        print("\n\t\t\t\t-------------------------------------------")
        print("\nGROSS SALARY:\t\t=\t\t",gross)
        print("\nDectected amount for EMI:\t\t",emi )   
     no()

#Ex 4: Data Manipulation Using Pandas 
import pandas as pd
df=pd.DataFrame({
 'NAME': ['gulfum','thiru','elavarasu','yogesh','santosh','nisanth','nivas','anji','smile','parag'],
 'FATHER NAME' : ['abu','red','pp','vig','sky','mur','yog','krish','manu','sai'],
 'doy'  : [2001,2002,1999,2000,2004,1998,2005,2006,2009,1998],
})
df['age']=2022-df['doy']
df['FATHER AGE']=2*df['age']
print("#1Dataframe:\n",df)
t2=df.select_dtypes(include=['int'])
t3=df.loc[0:4,'FATHER NAME':'doy']
t4=df.iloc[0:3,0:3]
t5=df.groupby(['doy',"age"]).groups
t6=df['STUDENT STATUS']=df['age'].apply (lambda x:'MAJOR' if x>18 else 'MINOR')
t7=df.rename(columns = {'STUDENT STATUS':'STUDENT STATUS'}, inplace = True)
print("\n#2 Select columns with specific data types:\n",t2)
print("\n#3 Slicing the dataframe:\n",t3)
print("\n#4 Select specific values in the column\n",t4)
print("\n#5 Group by Age:\n",t5)
print("\n#6 Map with dataframe:\n",t6)
print("\n#7 Rename the column name:\n",df)
t8=df.drop(df.index[1:3], inplace=True)
df.drop(['doy'], axis=1,inplace=True )
print("\n#8 Drop columns & rows in the dataframe:\n",df)
print("\n#9 Write/Read as CSV file:\n",)
df.to_csv('df')
display(df)

pip install feedsearch

#Ex 6: Modular Programming: Scrap news from Hacker News
from feedsearch import search
import feedparser
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from wordcloud import WordCloud,STOPWORDS
import numpy as np
feeds = search('https://thehackernews.com/')
df = pd.DataFrame({})
urls = [f.url for f in feeds]
a=[]
b=[]
c=[]
d=[]

if len(urls) > 0:
  nfeed = feedparser.parse(urls[0])
  entries =nfeed["entries"]
  count=0
for detail in entries:
  x=detail["link"]
  a.append(x)
for detail in entries:
  y=detail["title"]
  b.append(y)
for detail in entries:
  z=detail["id"]
  c.append(z)
for detail in entries:
  q=detail["published"]
  d.append(q)
df=pd.DataFrame({'link':a[0:5],'title':b[0:5],'id':c[0:5],'published date':d[0:5]})
display(df)
#for barplot
f=df[['title']]
fig = plt.figure()
print("\n\t\t*******Barplot*******\n")
ax = fig.add_axes([0,0,2,2])
ax.bar(d[0:5],a[0:5])
plt.show()
#for wordcloud
print("\n\n\t\t\t")
wc=WordCloud(background_color="black",width=1000,height=500).generate(''.join (f['title'].tolist()))
plt.figure(figsize=(10,7))
plt.imshow(wc)

